-- This is an example configuration for Conky using the Corky Lua
-- modules. Requires Conky version >=1.10. For an example using the
-- old (pre-1.10) configuration style please check the Git history.

-- The following is the regular Conky configuration. See the official
-- documentation for details.

conky.config            	= {
   background   		= false,
   update_interval      	= 1,
   cpu_avg_samples      	= 2,
   net_avg_samples		= 2,
   double_buffer        	= true,
   use_xft              	= true,

   minimum_width        	= 900,
   minimum_height       	= 900,
   own_window           	= true,
   own_window_type		= dock,
   own_window_argb_visual	= true,
   own_window_argb_value	= 0,
   own_window_hints		= 'undecorated,below,sticky,skip_taskbar,skip_pager',
   border_inner_margin		= 10,
   border_outer_margin		= 0,
   alignment = 'top_left',
   gap_x = 10,
   gap_y = 10,
   default_color 		= '#e8e6df',
   font                 	= "Hack Bold:size=9",

   lua_load             	= "lua/corky.lua",
   lua_startup_hook     	= "startup_hook",
   lua_shutdown_hook    	= "shutdown_hook",
   lua_draw_hook_pre    	= "draw_hook_pre",
   lua_draw_hook_post   	= "draw_hook_post";

};

--[[

   This is the Corky configuration. It is included in a Lua multiline
   comment, and still using the old syntax. I currently don't see any
   reason to change this to proper Lua, for the time being this will
   be the way Corky is configured. Only lines starting with #: will be
   processed by Corky.


   #: include, corky.cache
   #: include, corky.colors
   #: include, corky.circles
   #: include, corky.dcolors
   #: include, corky.lists
   #: include, corky.rects
   #: include, corky.text

   #: color,  background, 0x5b626f
   #: color,  fixed,      0xE8E6DF
   #: color,  shade,      0xACBBCD
   #: color,  aqua,       0x00E1FF
   #: color,  fuchsia,    0xBD00CE
   #: dcolor, dynamic,    0x00E1FF, 50, 0x087EC6, 95, 0x087EC6
   #: dcolor, gradient,   0xBD00CE, 50, 0xFF66B3,     0x35094E

   #: cache, ${cpu},      1, 0, 100
   #: cache, ${cpu cpu0}, 1, 0, 100
   #: cache, ${cpu cpu1}, 1, 0, 100
   #: cache, ${cpu cpu2}, 1, 0, 100
   #: cache, ${cpu cpu3}, 1, 0, 100
   #: cache, ${cpu cpu4}, 1, 0, 100
   #: cache, ${cpu cpu5}, 1, 0, 100
   #: cache, ${cpu cpu6}, 1, 0, 100
   #: cache, ${cpu cpu7}, 1, 0, 100
   #: cache, ${memperc},  1,  0, 100
   #: cache, ${downspeed wlp4s0},      1,  0, 7500
   #: cache, ${upspeed wlp4s0},	1,  0, 1500
 

   #: list, font, Hack, FONT_SLANT_NORMAL, FONT_WEIGHT_BOLD
   #: list, scale10, 10, 20, 30, 40, 50, 60, 70, 80, 90
   #: list, scale25, 25, 50, 75

   CIRCLE , thing, variable, LEFT (from center), TOP, RADIUS, STROKE, ROTATION, DEGREES VISIBLE
   RECT,    thing, variable, LEFT              , TOP, LENGTH, STROKE, ROTATION

   ---------------------
    CIRCLE 1 - CPUS 0-1
   ---------------------

   #: text,   cpu,              240,  35, font, 11,               shade, %4s%%, ${cpu cpu0}
   #: text,   cpu,              280,  35, font, 11,               fixed, CPU0
   #: circle, cpu, ${cpu cpu0},  60,  70,  40,  3,  40, 230,  dynamic, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu0},  60,  30, 180,  3,   0,       dynamic,  background, , , 20, 100

   #: text,   cpu,              240,  57, font, 11,               shade, %4s%%, ${cpu cpu1}
   #: text,   cpu,              280,  57, font, 11,               fixed, CPU1
   #: circle, cpu, ${cpu cpu1},  60,  70,  33,  3,  40, 230, gradient, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu1},  60,  37, 180,  3,   5,      gradient, background, , , 20, 100
   
   #: text,   temp,             43,  75, font, 11,             shade, %s, ${exec sensors -f | grep 'Core 0' | cut -c16-18}째F
   #: circle, temp, ${exec sensors -f | grep 'Core 0' | cut -c16-18}, 60, 70, 25, 3, 0, 360, fixed, background

   ---------------------
    CIRCLE 2 - CPUS 2-3
   ---------------------

   #: text,   cpu,               45, 134, font, 11,              shade, %4s%%, ${cpu cpu2}
   #: text,   cpu,               25, 134, font, 11,              fixed, CPU2
   #: circle, cpu, ${cpu cpu2}, 113, 120,  40,  3, 220, 230, gradient, background, , ,  0, 100

   #: text,   cpu,               45, 150, font, 11,              shade, %4s%%, ${cpu cpu3}
   #: text,   cpu,               25, 150, font, 11,              fixed, CPU3
   #: circle, cpu, ${cpu cpu3}, 113, 120,  33,  3, 220, 230,  dynamic, background, , ,  0, 100

   #: text,   temp,             96, 123, font, 11,             shade, %s, ${exec sensors -f | grep 'Core 1' | cut -c16-18}째F
   #: circle, temp, ${exec sensors -f | grep 'Core 1' | cut -c16-18}, 113, 120, 25, 3, 0, 360, fixed, background

   ---------------------
    CIRCLE 3 - CPUS 4-5
   ---------------------

   #: text,   cpu,              135, 190, font, 11,               shade, %4s%%, ${cpu cpu4}
   #: text,   cpu,              175, 190, font, 11,               fixed, CPU4
   #: circle, cpu, ${cpu cpu4}, 115, 193,  40,  3,  40, 230,  dynamic, background, , ,  0, 100

   #: text,   cpu,              135, 172, font, 11,               shade, %4s%%, ${cpu cpu}
   #: text,   cpu,              175, 172, font, 11,               fixed, CPU5
   #: circle, cpu, ${cpu cpu5}, 115, 193,  33,  3,  40, 230, gradient, background, , ,  0, 100
 
   #: text,   temp,             98, 198, font, 11,             shade, %s, ${exec sensors -f | grep 'Core 2' | cut -c16-18}째F
   #: circle, temp, ${exec sensors -f | grep 'Core 2' | cut -c16-18}, 115, 193, 25, 3, 0, 360, fixed, background
 
   ---------------------
    CIRCLE 4 - CPUS 6-7
   ---------------------
 
   #: text,   cpu,               35, 295, font, 11,              shade, %4s%%, ${cpu cpu7}
   #: text,   cpu,               15, 295, font, 11,              fixed, CPU7
   #: circle, cpu, ${cpu cpu7}, 170, 241,  40,  3, 220, 230, gradient, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu7}, 170, 281,  90,  3, 175,       gradient, background, , , 20, 100

   #: text,   cpu,              35,  275, font, 11,              shade, %4s%%, ${cpu cpu6}
   #: text,   cpu,              15,  275, font, 11,              fixed, CPU6
   #: circle, cpu, ${cpu cpu6}, 170, 241,  33,  3, 220, 230,  dynamic, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu6}, 170, 274,  90,  3, 180,        dynamic, background, , , 20, 100

   #: text,   temp,            153, 247, font, 11,             shade, %s, ${exec sensors -f | grep 'Core 3' | cut -c16-18}째F
   #: circle, temp, ${exec sensors -f | grep 'Core 3' | cut -c16-18}, 170, 242, 25, 3, 0, 360, fixed, background

   -------
    CLOCK
   -------

   #: text,   cpu,               30, 350, font, 12,            fixed, %s, ${time %A}
   #: text,   cpu,               30, 375, font, 12,            fixed, %s, ${time %d %B %Y}
   #: text,   cpu,               30, 430, font, 50,            fixed, %s, ${time %H:%M}

   -----
    MEM
   -----
   #: text,   cpu,                 367,  35, font, 12,               shade, %s, CPU
   #: text,   cpu,                 370,  75, font, 11,               shade, %s%%, ${cpu}
   #: circle, cpu, ${cpu},         380,  70, 25, 10, 0, 360, dynamic, background

   #: text,   cpu,                 447,  35, font, 12,               shade, %s, MEM
   #: text,   mem,                 450,  75, font, 11,               shade, %s%%, ${memperc}
   #: circle, memperc, ${memperc}, 460,  70, 25, 10, 0, 360, dynamic, background

   --------
    SPEEDS
   --------


   : text,   cpu,                25, 220, font, 9,              shade, %4s%%, ${cpu cpu4}
   : text,   cpu,                10, 220, font, 9,              fixed, CPU4
   #: circle, cpu, ${cpu cpu4},   0, 525,  55,  3, 270, 100,  dynamic, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu4},  55, 534,  20,  3,  0,       dynamic, background, , , 20, 100

   #: text,   cpu,                35, 545, font, 9,              shade, %s, ${diskio}
   #: text,   cpu,                35, 575, font, 9,              fixed, %s, ${diskio}
   #: circle, cpu, ${cpu cpu5},   0, 525,  45,  3, 270, 120, gradient, background, , ,  0,  20
   #: rect,   cpu, ${cpu cpu5},  40, 547,  30,  3,   0,      gradient, background, , , 20, 100

   #: text,   cpu,                26, 605, font, 10,                     shade, %s, ${upspeed wlp4s0}
   #: text,   cpu,                26, 592, font, 10,                   fixed, UP
   #: circle, cpu, ${upspeedf wlp4s0},   0, 525,  35,  3, 270, 155,   dynamic, background, , ,  0,  20
   #: rect,   cpu, ${upspeedf wlp4s0},  16, 558, 50,  3,  90,         dynamic, background, , , 20, 100

   #: text,   cpu,                15, 645, font, 10,                     shade, %s, ${downspeed wlp4s0}
   #: text,   cpu,                15, 632, font, 10,                     fixed, DOWN
   #: circle, cpu, ${downspeedf wlp4s0},   0, 525,  25,  3, 270, 170, gradient, background, , ,  0,  20
   #: rect,   cpu, ${downspeedf wlp4s0},   4, 549, 100,  3,   90,     gradient, background, , , 20, 100



   : text,   cpu, 245, 282, font, 10, aqua, %s, ${upspeed wlp4s0}
   : rect,   cpu, ${upspeedf wlp4s0}, 155, 187,  120,  3,  90,       gradient, background, , ,    0, 40
   : circle, cpu, ${upspeedf wlp4s0}, 145, 307,  10,  3,   0, 90,   gradient, background, , ,   40, 42
   : rect,   cpu, ${upspeedf wlp4s0}, 145, 317,  30,  3, 180,       gradient, background, , ,   42, 100
   : text,   cpu, 200, 320, font, 9, aqua, %s, UP
   : rect,   cpu, ${downspeedf wlp4s0}, 275, 287,  40,  3,  90,       gradient, background, , ,  0,  40
   : circle, cpu, ${downspeedf wlp4s0}, 265, 327,  10,  3,   0, 90,   gradient, background, , , 40,  42
   : rect,   cpu, ${downspeedf wlp4s0}, 265, 337,  30,  3, 180,       gradient, background, , , 42, 100
   : text,   cpu, 207, 340, font, 9, aqua, %s, DOWN



--]]

-- The following is Conky's output. Actual meters are drawn by Corky.

conky.text = [[



${goto 500}${mem} / ${memmax}
${goto 500}Swap: ${swapperc}%














]]
